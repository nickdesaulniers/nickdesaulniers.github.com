<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on Nick Desaulniers</title><link>https://nickdesaulniers.github.io/categories/code/</link><description>Recent content in Code on Nick Desaulniers</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 03 Apr 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://nickdesaulniers.github.io/categories/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic JIT</title><link>https://nickdesaulniers.github.io/blog/2013/04/03/basic-jit/</link><pubDate>Wed, 03 Apr 2013 00:00:00 +0000</pubDate><guid>https://nickdesaulniers.github.io/blog/2013/04/03/basic-jit/</guid><description>Ever since I learned about Just In Time Compilation from the various Ruby VMs and JavaScript VMs, I&amp;rsquo;ve been inspired. I could tell you all about how just in time (JIT) compilation worked, and how it could give your interpreted language a speed boost. It was so cool. Well, it still is! There&amp;rsquo;s a ton of research going on around JIT compilation. But the problem for me is that I could never figure out, let alone guess, how it was being done.</description></item></channel></rss>